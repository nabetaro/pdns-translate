====================================
This is the luabackend for PowerDNS!
====================================

This backend is just a "glue" between PowerDNS and your own Lua application.

This does mean that you can not have a working setup that can serve you
dns-questions directly from start. What you need to do is to program your own 
backend completly in Lua! Which database server to use etc is now up to you!

What you have here is the possibility to make your own "dns-server" without the 
knowledge of programming in c/c++.

There is one thing that needs to be sad. Remember that each thread 
PowerDNS launch of this backend is completly different so they cannot 
share information between each other! 

You will need some kind of a database that can be shared for this.

All the functionsname that PowerDNS except for a backend should be the same
in your Lua script, in lowercase. Also, the parameters should be in the same 
order. Where there is a struture in c/c++ there is a table in the Lua backend.
This is also true for returnvalues.


=============
NEW FUNCTIONS
=============

There is a couple of new functions for you to use in Lua:

-----------------------------------
logger(log_facility, "your messages")
-----------------------------------

All these log_facilities is availible:
log_all, log_ntlog, log_alert, log_critical, log_error, log_warning, log_notice,
log_info, log_debug, log_none


-----------
dnspacket()
-----------

This will give you back three parameters with
remote_ip, remote_port and local_ip in that order.

Can only be used for the functions list() and getsoa().


------------------------
getarg("your_parameter")
------------------------

Thisone tries to get the value of the name "lua-your_parameter" from the pdns.conf file.


------------------------
mustdo("your_parameter")
------------------------

This is the same as getarg() but return a boolean instead of a string.


You also have all the different QTypes in a table called 'QTypes'.


====================
WHAT HAS BEEN TESTED
====================

The only functionallity of the mininal functions except zone-transfer has
been tested. 

In the included powerdns-luabackend.lua file there is a example of how
this can be done. Note that this is more or less a static example since
there is no possiblity for each thread to know when something has changed.

However, you run 'pdns_control reload' and it should reload the hole thing 
from scratch.


===========================================
WHAT YOU WILL FIND UNDER THE TEST DIRECTORY
===========================================

The script 'pdns' is used to test the server on the ip address '127.0.0.1' with
the port 5300. You should be able to run the following test with the included 
'powerdns-luabackend.lua' file:

$dig any www.test.com @127.0.0.1 -p5300 +multiline
; <<>> DiG 9.7.3 <<>> any www.test.com @127.0.0.1 -p5300 +multiline
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 1001
;; flags: qr aa rd; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0
;; WARNING: recursion requested but not available

;; QUESTION SECTION:
;www.test.com.          IN ANY

;; ANSWER SECTION:
www.test.com.           120 IN CNAME host.test.com.
host.test.com.          120 IN A 10.11.12.13
host.test.com.          120 IN AAAA 1:2:3:4:5:6:7:8

;; Query time: 1 msec
;; SERVER: 127.0.0.1#5300(127.0.0.1)
;; WHEN: Thu Jun  2 22:19:56 2011
;; MSG SIZE  rcvd: 93


=============================
OPTIONS IN THE CONFIGURE FILE
=============================

The default values is:

lua-filename = powerdns-luabackend.lua

You can also override all the default functionsnames for the luafunctions if you want.
The prefix is lua-f_<functionname>=mynewfunction. For example:

lua-f_lookup = mynewfunction 

will call the function 'mynewfunction' for the lookup-routine.

If you want your own configuration parameters you can have that too. 
Just call the function getarg("my_parameter") and it will return the value
of 'lua-my_parameter'. For boolean you use the function mustdo("my_parameter").



You can send question about this backend to >dev/null first and if you don't get any 
answer from that you can try to send them to me at fredan-pdns@fredan.org

Fredrik Danerklint.